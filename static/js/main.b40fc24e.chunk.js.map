{"version":3,"sources":["App.tsx","api/goods.ts","components/GoodsList.tsx","components/Button.tsx","index.tsx"],"names":["RequestType","API_URL","getAll","fetch","then","response","json","get5First","goods","sort","good1","good2","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","props","className","map","style","id","Button","text","action","type","onClick","App","state","goodsFromServer","hasRequestError","request","a","setState","this","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4JAYKA,E,oFCXCC,G,KAAO,yEAEAC,EAAS,WACpB,OAAOC,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAGlBC,EAAY,WACvB,OAAOJ,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAI,GAAK,OAAKA,EACbC,MAAK,SAACC,EAAaC,GAAd,OACJD,EAAME,KAAKC,cAAcF,EAAMC,SAEhCE,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOZ,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAI,GAAK,OAAKA,EACbQ,QAAO,SAACC,GAAD,MAA+B,QAAfA,EAAKC,a,OCftBC,EAA6B,SAACC,GACzC,IAAQZ,EAAUY,EAAVZ,MAER,OACE,oBAAIa,UAAU,YAAd,SACGb,EAAMc,KAAI,SAACL,GAAD,OACT,oBAEEM,MAAO,CAAEL,MAAOD,EAAKC,OACrBG,UAAU,YAHZ,SAKGJ,EAAKL,MAJDK,EAAKO,UCNPC,EAA0B,SAACL,GACtC,IAAQM,EAA4BN,EAA5BM,KAAMC,EAAsBP,EAAtBO,OAAQN,EAAcD,EAAdC,UAEtB,OACE,wBACEO,KAAK,SACLC,QAASF,EACTN,UAAWA,EAHb,SAKGK,M,SHLF1B,K,UAAAA,E,sBAAAA,E,WAAAA,M,SA0GU8B,E,4MAnGbC,MAAQ,CACNC,gBAAiB,GACjBC,iBAAiB,G,EAGnBC,Q,uCAAU,WAAON,GAAP,eAAAO,EAAA,sDACJ3B,EAAQ,KADJ,KAGAoB,EAHA,OAID,QAJC,OAkBD,cAlBC,QAgCD,QAhCC,iDAMY1B,IACXE,MAAK,SAAA4B,GAAe,OAAI,EAAKI,SAAS,CAAEJ,uBAPzC,cAMFxB,EANE,yBASKA,GATL,yCAWF,EAAK4B,SAAS,CACZH,iBAAiB,IAZjB,kBAeK,MAfL,mCAoBY1B,IACXH,MAAK,SAAA4B,GAAe,OAAI,EAAKI,SAAS,CAAEJ,uBArBzC,eAoBFxB,EApBE,yBAuBKA,GAvBL,0CAyBF,EAAK4B,SAAS,CACZH,iBAAiB,IA1BjB,kBA6BK,MA7BL,mCAkCYlB,IACXX,MAAK,SAAA4B,GAAe,OAAI,EAAKI,SAAS,CAAEJ,uBAnCzC,eAkCFxB,EAlCE,yBAqCKA,GArCL,0CAuCF,EAAK4B,SAAS,CACZH,iBAAiB,IAxCjB,kBA2CK,MA3CL,iCA+CG,MA/CH,0E,kGAmDV,WAAU,IAAD,OACP,EAA6CI,KAAKN,MAA1CC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,gBAEzB,OACE,qBAAKZ,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACGW,EAAgBM,OAAS,GACxB,cAAC,EAAD,CAAW9B,MAAOwB,IAGnBC,GACC,mBACEZ,UAAU,qBADZ,8CAOF,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEK,KAAK,iBACLC,OAAQ,kBAAM,EAAKO,QAAQ,QAC3Bb,UAAU,gBAGZ,cAAC,EAAD,CACEK,KAAK,qBACLC,OAAQ,kBAAM,EAAKO,QAAQ,cAC3Bb,UAAU,gBAGZ,cAAC,EAAD,CACEK,KAAK,iBACLC,OAAQ,kBAAM,EAAKO,QAAQ,QAC3Bb,UAAU,4B,GA3FNkB,IAAMC,WIfxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.b40fc24e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './components/GoodsList';\nimport { Button } from './components/Button';\n\ninterface State {\n  goodsFromServer: Good[];\n  hasRequestError: boolean;\n}\n\nenum RequestType {\n  all = 'all',\n  fiveFirst = 'fiveFirst',\n  red = 'red',\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goodsFromServer: [],\n    hasRequestError: false,\n  };\n\n  request = async (type: RequestType) => {\n    let goods = null;\n\n    switch (type) {\n      case 'all':\n        try {\n          goods = await getAll()\n            .then(goodsFromServer => this.setState({ goodsFromServer }));\n\n          return goods;\n        } catch (error) {\n          this.setState({\n            hasRequestError: true,\n          });\n\n          return null;\n        }\n\n      case 'fiveFirst':\n        try {\n          goods = await get5First()\n            .then(goodsFromServer => this.setState({ goodsFromServer }));\n\n          return goods;\n        } catch (error) {\n          this.setState({\n            hasRequestError: true,\n          });\n\n          return null;\n        }\n\n      case 'red':\n        try {\n          goods = await getRedGoods()\n            .then(goodsFromServer => this.setState({ goodsFromServer }));\n\n          return goods;\n        } catch (error) {\n          this.setState({\n            hasRequestError: true,\n          });\n\n          return null;\n        }\n\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    const { goodsFromServer, hasRequestError } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"App\">\n          {goodsFromServer.length > 0 && (\n            <GoodsList goods={goodsFromServer} />\n          )}\n\n          {hasRequestError && (\n            <p\n              className=\"App__error-message\"\n            >\n              Seems like we have an error here\n            </p>\n          )}\n\n          <div className=\"App__buttons\">\n            <Button\n              text=\"Load all goods\"\n              action={() => this.request('all' as RequestType.all)}\n              className=\"App__button\"\n            />\n\n            <Button\n              text=\"Load 5 first goods\"\n              action={() => this.request('fiveFirst' as RequestType.fiveFirst)}\n              className=\"App__button\"\n            />\n\n            <Button\n              text=\"Load red goods\"\n              action={() => this.request('red' as RequestType.red)}\n              className=\"App__button\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport const getAll = () => {\n  return fetch(API_URL)\n    .then(response => response.json());\n};\n\nexport const get5First = () => {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .then(goods => (goods\n      .sort((good1: Good, good2: Good) => (\n        good1.name.localeCompare(good2.name)\n      ))\n      .slice(0, 5)));\n};\n\nexport const getRedGoods = () => {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .then(goods => (goods\n      .filter((good: Good) => good.color === 'red')));\n};\n","import React from 'react';\nimport '../App.scss';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = (props) => {\n  const { goods } = props;\n\n  return (\n    <ul className=\"App__list\">\n      {goods.map((good: Good) => (\n        <li\n          key={good.id}\n          style={{ color: good.color }}\n          className=\"App__item\"\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  text: string;\n  action: () => Promise<void | null>;\n  className: string;\n}\n\nexport const Button: React.FC<Props> = (props) => {\n  const { text, action, className } = props;\n\n  return (\n    <button\n      type=\"button\"\n      onClick={action}\n      className={className}\n    >\n      {text}\n    </button>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}