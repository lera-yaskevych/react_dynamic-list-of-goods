{"version":3,"sources":["api/goods.ts","components/GoodsList.tsx","components/Button.tsx","App.tsx","index.tsx"],"names":["API_URL","getAll","fetch","then","response","json","get5First","goods","sort","good1","good2","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","props","className","map","style","id","Button","text","action","type","onClick","App","state","hasRequestError","makeRequest","query","a","requestResult","setState","this","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gPACMA,G,KAAO,yEAEAC,EAAS,WACpB,OAAOC,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAGlBC,EAAY,WACvB,OAAOJ,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAI,GAAK,OAAKA,EACbC,MAAK,SAACC,EAAaC,GAAd,OACJD,EAAME,KAAKC,cAAcF,EAAMC,SAEhCE,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOZ,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAI,GAAK,OAAKA,EACbQ,QAAO,SAACC,GAAD,MAA+B,QAAfA,EAAKC,a,OCftBC,EAA6B,SAACC,GACzC,IAAQZ,EAAUY,EAAVZ,MAER,OACE,oBAAIa,UAAU,YAAd,SACGb,EAAMc,KAAI,SAACL,GAAD,OACT,oBAEEM,MAAO,CAAEL,MAAOD,EAAKC,OACrBG,UAAU,YAHZ,SAKGJ,EAAKL,MAJDK,EAAKO,UCNPC,EAA0B,SAACL,GACtC,IAAQM,EAA4BN,EAA5BM,KAAMC,EAAsBP,EAAtBO,OAAQN,EAAcD,EAAdC,UAEtB,OACE,wBACEO,KAAK,SACLC,QAASF,EACTN,UAAWA,EAHb,SAKGK,KC6DQI,E,4MAjEbC,MAAe,CACbvB,MAAO,GACPwB,iBAAiB,G,EAGnBC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,6DACRC,EAAgB,KADR,kBAIYF,IACnB9B,MAAK,SAAAI,GAAK,OAAI,EAAK6B,SAAS,CAAE7B,aALvB,cAIV4B,EAJU,yBAOHA,GAPG,gCASV,EAAKC,SAAS,CACZL,iBAAiB,IAVT,iCAcLI,GAdK,yD,kGAiBd,WAAU,IAAD,OACP,EAAmCE,KAAKP,MAAhCvB,EAAR,EAAQA,MAAOwB,EAAf,EAAeA,gBAEf,OACE,qBAAKX,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACGb,EAAM+B,OAAS,GACd,cAAC,EAAD,CAAW/B,MAAOA,IAGnBwB,GACC,mBACEX,UAAU,qBADZ,8CAOF,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEK,KAAK,iBACLC,OAAQ,kBAAM,EAAKM,YAAY/B,IAC/BmB,UAAU,gBAGZ,cAAC,EAAD,CACEK,KAAK,qBACLC,OAAQ,kBAAM,EAAKM,YAAY1B,IAC/Bc,UAAU,gBAGZ,cAAC,EAAD,CACEK,KAAK,iBACLC,OAAQ,kBAAM,EAAKM,YAAYlB,IAC/BM,UAAU,4B,GAzDNmB,IAAMC,WCTxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.9b9b9c59.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport const getAll = () => {\n  return fetch(API_URL)\n    .then(response => response.json());\n};\n\nexport const get5First = () => {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .then(goods => (goods\n      .sort((good1: Good, good2: Good) => (\n        good1.name.localeCompare(good2.name)\n      ))\n      .slice(0, 5)));\n};\n\nexport const getRedGoods = () => {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .then(goods => (goods\n      .filter((good: Good) => good.color === 'red')));\n};\n","import React from 'react';\nimport '../App.scss';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = (props) => {\n  const { goods } = props;\n\n  return (\n    <ul className=\"App__list\">\n      {goods.map((good: Good) => (\n        <li\n          key={good.id}\n          style={{ color: good.color }}\n          className=\"App__item\"\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  text: string;\n  action: () => Promise<void | null>;\n  className: string;\n}\n\nexport const Button: React.FC<Props> = (props) => {\n  const { text, action, className } = props;\n\n  return (\n    <button\n      type=\"button\"\n      onClick={action}\n      className={className}\n    >\n      {text}\n    </button>\n  );\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './components/GoodsList';\nimport { Button } from './components/Button';\n\ninterface State {\n  goods: Good[];\n  hasRequestError: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: [],\n    hasRequestError: false,\n  };\n\n  makeRequest = async (query: () => Promise<Good[]>) => {\n    let requestResult = null;\n\n    try {\n      requestResult = await query()\n        .then(goods => this.setState({ goods }));\n\n      return requestResult;\n    } catch (error) {\n      this.setState({\n        hasRequestError: true,\n      });\n    }\n\n    return requestResult;\n  };\n\n  render() {\n    const { goods, hasRequestError } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"App\">\n          {goods.length > 0 && (\n            <GoodsList goods={goods} />\n          )}\n\n          {hasRequestError && (\n            <p\n              className=\"App__error-message\"\n            >\n              Seems like we have an error here\n            </p>\n          )}\n\n          <div className=\"App__buttons\">\n            <Button\n              text=\"Load all goods\"\n              action={() => this.makeRequest(getAll)}\n              className=\"App__button\"\n            />\n\n            <Button\n              text=\"Load 5 first goods\"\n              action={() => this.makeRequest(get5First)}\n              className=\"App__button\"\n            />\n\n            <Button\n              text=\"Load red goods\"\n              action={() => this.makeRequest(getRedGoods)}\n              className=\"App__button\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}